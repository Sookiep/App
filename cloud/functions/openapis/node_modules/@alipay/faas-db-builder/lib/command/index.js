"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Command=exports.AggregateCommandFactory=void 0;const avg_1=require("./aggregate/avg"),count_1=require("./aggregate/count"),max_1=require("./aggregate/max"),min_1=require("./aggregate/min"),sum_1=require("./aggregate/sum"),set_1=require("./update/set"),inc_1=require("./update/inc"),QueryChain_1=require("./query/QueryChain"),or_1=require("./query/or"),and_1=require("./query/and"),util_1=require("./util"),not_1=require("./query/not"),nor_1=require("./query/nor"),eq_1=require("./query/eq"),neq_1=require("./query/neq"),lt_1=require("./query/lt"),lte_1=require("./query/lte"),gt_1=require("./query/gt"),gte_1=require("./query/gte"),in_1=require("./query/in"),nin_1=require("./query/nin"),exists_1=require("./query/exists"),mod_1=require("./query/mod"),all_1=require("./query/all"),elemMatch_1=require("./query/elemMatch"),size_1=require("./query/size");class AggregateCommandFactory{avg(e){return new avg_1.AvgCommand(e)}count(){return new count_1.CountCommand}max(e){return new max_1.MaxCommand(e)}min(e){return new min_1.MinCommand(e)}sum(e){return new sum_1.SumCommand(e)}}exports.AggregateCommandFactory=AggregateCommandFactory;class Command{aggregate;constructor(){this.aggregate=new AggregateCommandFactory}set(e){return new set_1.SetCommand(e)}inc(e){return new inc_1.IncCommand(e)}and(...e){e=Array.isArray(e[0])?e[0]:e;const n=new and_1.AndCommand(e.map(util_1.CommandUtils.unchain));return new QueryChain_1.QueryChain(n)}or(...e){e=Array.isArray(e[0])?e[0]:e;const n=new or_1.OrCommand(e.map(util_1.CommandUtils.unchain));return new QueryChain_1.QueryChain(n)}not(e){const n=new not_1.NotCommand(util_1.CommandUtils.unchain(e));return new QueryChain_1.QueryChain(n)}nor(...e){e=Array.isArray(e[0])?e[0]:e;const n=new nor_1.NorCommand(e.map(util_1.CommandUtils.unchain));return new QueryChain_1.QueryChain(n)}eq(e){return new QueryChain_1.QueryChain(new eq_1.EqCommand(e))}neq(e){return new QueryChain_1.QueryChain(new neq_1.NeqCommand(e))}lt(e){return new QueryChain_1.QueryChain(new lt_1.LtCommand(e))}lte(e){return new QueryChain_1.QueryChain(new lte_1.LteCommand(e))}gt(e){return new QueryChain_1.QueryChain(new gt_1.GtCommand(e))}gte(e){return new QueryChain_1.QueryChain(new gte_1.GteCommand(e))}in(e){return new QueryChain_1.QueryChain(new in_1.InCommand(e))}nin(e){return new QueryChain_1.QueryChain(new nin_1.NinCommand(e))}exists(e){return new QueryChain_1.QueryChain(new exists_1.ExistsCommand(e))}mod(e,n){return new QueryChain_1.QueryChain(new mod_1.ModCommand(e,n))}all(e){return new QueryChain_1.QueryChain(new all_1.AllCommand(e))}elemMatch(e){return new QueryChain_1.QueryChain(new elemMatch_1.ElemMatchCommand(util_1.CommandUtils.unchain(e)))}size(e){return new QueryChain_1.QueryChain(new size_1.SizeCommand(e))}}exports.Command=Command;